# Render Blueprint - v5 (Corrected for Validation Errors)

# Define the group for secrets YOU will provide in the dashboard.
envVarGroups:
  - name: shared-vars
    envVars:
      - key: DATABASE_URL
      - key: SENTRY_DSN
      - key: SENDGRID_API_KEY
      - key: HCP_SECRET
      - key: PYTHON_VERSION
        value: "3.11.9"

services:
  # 1. The Redis database. It must be defined first.
  - type: redis
    name: redis-cache
    plan: free
    # FIX: Add the required ipAllowList. `[]` means no external access.
    ipAllowList: []

  # 2. The Backend API. It depends on Redis.
  - name: yield-api
    type: web
    env: python
    rootDir: api
    buildCommand: "pip install -r requirements.txt"
    startCommand: "uvicorn main:app --host 0.0.0.0 --port $PORT"
    envVars:
      # Link the manual secrets group
      - fromGroup: shared-vars
      # Get the Redis URL directly from the service
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis-cache
          property: internalConnectionString

  # 3. The Frontend. It depends on the API. Must be defined AFTER yield-api.
  - name: next-ui
    type: web
    env: node
    rootDir: frontend
    buildCommand: "npm install && npm run build"
    startCommand: "npm start"
    envVars:
      - key: NEXT_PUBLIC_API_URL
        fromService:
          type: web
          name: yield-api
          # FIX: The property name is 'url'
          property: url

  # 4. The Background Worker. It depends on Redis.
  - name: alert-worker
    type: worker
    env: python
    rootDir: worker
    buildCommand: "pip install -r requirements.txt"
    startCommand: "python alerts.py"
    envVars:
      - fromGroup: shared-vars
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis-cache
          property: internalConnectionString

  # 5. The Cron Job. It depends on Redis.
  - name: gpu-scraper
    type: cron
    env: python
    rootDir: scrapper
    schedule: "*/2 * * * *"
    buildCommand: "pip install -r requirements.txt"
    startCommand: "python main.py"
    envVars:
      - fromGroup: shared-vars
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis-cache
          property: internalConnectionString